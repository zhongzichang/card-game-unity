// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using System.IO;
using DragonBones;
using DragonBones.Factorys;
using DragonBones.Animation;
using DragonBones.Objects;
using DragonBones.Display;
using DragonBones.Textures;
using System.Collections.Generic;
using Com.Viperstudio.Utils;
using UnityEngine;

namespace LastCastle
{
  public class CharactorManager :MonoBehaviour
  {
    void Awake ()
    {
      //Application.targetFrameRate = 30;

    }

    void Start ()
    {
      //read and parse skeleton josn into SkeletonData
      TextAsset jsonReader = (TextAsset)Resources.Load ("DragonBones/skeleton.json", typeof(TextAsset));
      TextReader reader = new StringReader (jsonReader.text);
      Dictionary<String, System.Object> skeletonRawData = Json.Deserialize (reader) as Dictionary<String, System.Object>;
      SkeletonData skeletonData = ObjectDataParser.ParseSkeletonData (skeletonRawData);

      //read and parse texture atlas josn into TextureAtlas
      Texture _textures = Resources.Load<Texture> ("DragonBones/texture");
      jsonReader = (TextAsset)Resources.Load ("DragonBones/texture.json", typeof(TextAsset));
      reader = new StringReader (jsonReader.text);
      Dictionary<String, System.Object> atlasRawData = Json.Deserialize (reader) as Dictionary<String, System.Object>;
      AtlasData atlasData = AtlasDataParser.ParseAtlasData (atlasRawData);
      TextureAtlas textureAtlas = new TextureAtlas (_textures, atlasData);

      //use the above data to make factory
      UnityFactory factory = new UnityFactory ();
      factory.AddSkeletonData (skeletonData, skeletonData.Name);
      factory.AddTextureAtlas (textureAtlas);

      //add 20 centaur into scene at some random positions.
      System.Random random = new System.Random ();
      for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 5; j++) {
          Armature armature = factory.BuildArmature ("centaur/charactor", null, "charactor_all");
          armature.AdvanceTime (0f);
          float r0 = (float)random.NextDouble () + 0.5f;
          float r1 = 0;//(float)random.NextDouble();
          float r2 = (float)random.NextDouble ();
          ((armature.Display as UnityArmatureDisplay).Display as GameObject).transform.position = new Vector3 ((float)j + r0 * 20f, 1, r2 * 15f);
          WorldClock.Clock.Add (armature);
          armature.Animation.GotoAndPlay ("run", -1, -1, 0);
        }
      }

      //add 20 bird into scene at some random positions.
      for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 5; j++) {
          Armature armature = factory.BuildArmature ("bird/charactor", null, "charactor_all");
          armature.AdvanceTime (0f);
          float r0 = (float)random.NextDouble () + 0.5f;
          float r1 = (float)random.NextDouble () + 1;
          float r2 = (float)random.NextDouble ();
          ((armature.Display as UnityArmatureDisplay).Display as GameObject).transform.position = new Vector3 ((float)j + r0 * 20f, (float)i * 3f + r1 * 5f, r2 * 15f);
          WorldClock.Clock.Add (armature);
          armature.Animation.GotoAndPlay ("fly", -1, -1, 0);
        }
      }
    }
    // Update is called once per frame
    void Update ()
    {
      WorldClock.Clock.AdvanceTime (Time.deltaTime);
    }
  }
}

