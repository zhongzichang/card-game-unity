// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using System;
using UnityEngine;
using System.Collections.Generic;
using TangUtils;

namespace Tang
{
  public class AssetBundleLoader
  {
    public delegate void LoadCompleted (AssetBundle ab);

    public delegate void LoadFailure (string name);

    public delegate void LoadBegan (string name);

    private static Dictionary<string, LoadCompleted> completedHandlerTable = new Dictionary<string, LoadCompleted> ();
    private static Dictionary<string, LoadFailure> failureHandlerTable = new Dictionary<string, LoadFailure> ();
    private static Dictionary<string, LoadBegan> beganHandlerTable = new Dictionary<string, LoadBegan> ();

    public static void LoadAsync (string name, LoadCompleted loadCompleted, LoadFailure loadFailure)
    {
      LoadAsync (name, loadCompleted, loadFailure, null);
    }

    public static void LoadAsync (string name, LoadCompleted loadCompleted)
    {
      LoadAsync (name, loadCompleted, null, null);
    }

    public static void LoadAsync (string name, LoadCompleted loadCompleted, LoadFailure loadFailure, LoadBegan loadBegan)
    {


      if (completedHandlerTable.ContainsKey (name))
        completedHandlerTable [name] += loadCompleted;
      else
        completedHandlerTable [name] = loadCompleted;

      if (failureHandlerTable.ContainsKey (name))
        failureHandlerTable [name] += loadFailure;
      else
        failureHandlerTable [name] = loadFailure;

      if (beganHandlerTable.ContainsKey (name))
        beganHandlerTable [name] += loadBegan;
      else
        beganHandlerTable [name] = loadBegan;

      string filepath = ResourceUtils.GetAbFilePath (name);
      ResourceLoader.Enqueue (filepath, OnWWWLoadCompleted, OnWWWLoadFailure, OnWWWLoadBegan);
    }

    private static void OnWWWLoadCompleted (WWW www)
    {
      string name = UrlUtil.GetFileNameWithoutExt (www.url);
      LoadCompleted handler = completedHandlerTable [name];
      if (handler != null && www.assetBundle != null) {
        handler (www.assetBundle);
        www.assetBundle.Unload (true);
      }
    }

    private static void OnWWWLoadFailure (WWW www)
    {
      string name = UrlUtil.GetFileNameWithoutExt (www.url);
      LoadFailure handler = failureHandlerTable [name];
      if (handler != null) {
        handler (name);
      }
    }

    private static void OnWWWLoadBegan (WWW www)
    {
          
      string name = UrlUtil.GetFileNameWithoutExt (www.url);
      LoadBegan handler = beganHandlerTable [name];
      if (handler != null) {
        handler (name);
      }
    }
  }
}

